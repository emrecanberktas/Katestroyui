{
  "$schema": "https://ui.shadcn.com/schema/registry-item.json",
  "name": "context-menu",
  "type": "registry:component",
  "title": "Context Menu",
  "description": "UI component for Context Menu.",
  "files": [
    {
      "path": "components/ui/context-menu.tsx",
      "content": "import React, { useRef, useState, useEffect, createContext } from \"react\";\nimport * as ContextMenuPrimitive from \"@radix-ui/react-context-menu\";\nimport { ChevronRightIcon, CircleIcon } from \"lucide-react\";\nimport { motion, AnimatePresence, useMotionValue } from \"motion/react\";\n\nimport { cn } from \"@/lib/utils\";\nimport { Checkbox } from \"./checkbox\";\n\ntype ContextMenuTriggerProps = React.ComponentProps<\n  typeof ContextMenuPrimitive.Trigger\n> & {\n  customCursor?: React.ReactNode;\n};\n\nconst ContextMenuSubContentContext = createContext<{ isOpen: boolean } | null>(\n  null\n);\n\nfunction ContextMenu({\n  ...props\n}: React.ComponentProps<typeof ContextMenuPrimitive.Root>) {\n  return <ContextMenuPrimitive.Root data-slot=\"context-menu\" {...props} />;\n}\n\nfunction ContextMenuTrigger({\n  className,\n  style,\n  children,\n  customCursor,\n  ...props\n}: ContextMenuTriggerProps) {\n  const x = useMotionValue(0);\n  const y = useMotionValue(0);\n  const [isActive, setIsActive] = useState(false);\n  const containerRef = useRef<HTMLDivElement>(null);\n\n  useEffect(() => {\n    if (typeof window !== \"undefined\" && containerRef.current) {\n      const parent = containerRef.current.parentElement;\n\n      if (parent) {\n        const handleMouseMove = (e: MouseEvent) => {\n          x.set(e.clientX);\n          y.set(e.clientY);\n        };\n\n        const handleMouseEnter = () => setIsActive(true);\n        const handleMouseLeave = () => setIsActive(false);\n\n        parent.addEventListener(\"mousemove\", handleMouseMove);\n        parent.addEventListener(\"mouseenter\", handleMouseEnter);\n        parent.addEventListener(\"mouseleave\", handleMouseLeave);\n\n        return () => {\n          parent.removeEventListener(\"mousemove\", handleMouseMove);\n          parent.removeEventListener(\"mouseenter\", handleMouseEnter);\n          parent.removeEventListener(\"mouseleave\", handleMouseLeave);\n        };\n      }\n    }\n  }, [x, y]);\n\n  return (\n    <ContextMenuPrimitive.Trigger\n      data-slot=\"context-menu-trigger\"\n      className={cn(\"cursor-none\", className)}\n      {...props}\n    >\n      <div\n        ref={containerRef}\n        className=\"relative group cursor-none hover:cursor-none\"\n      >\n        <AnimatePresence>\n          {isActive && (\n            <motion.div\n              className=\"pointer-events-none fixed z-50 transform -translate-x-1/2 -translate-y-1/2\"\n              style={{ top: y, left: x, ...style }}\n              initial={{ scale: 0, opacity: 0 }}\n              animate={{ scale: 1, opacity: 1 }}\n              exit={{ scale: 0, opacity: 0 }}\n            >\n              {customCursor ? (\n                // Render custom cursor if provided\n                customCursor\n              ) : (\n                // Default SVG cursor\n                <svg\n                  stroke=\"currentColor\"\n                  fill=\"currentColor\"\n                  strokeWidth=\"1\"\n                  viewBox=\"0 0 16 16\"\n                  height=\"24\"\n                  width=\"24\"\n                  xmlns=\"http://www.w3.org/2000/svg\"\n                  className={cn(\"rotate-[-70deg] stroke-white text-black\")}\n                >\n                  <path d=\"M14.082 2.182a.5.5 0 0 1 .103.557L8.528 15.467a.5.5 0 0 1-.917-.007L5.57 10.694.803 8.652a.5.5 0 0 1-.006-.916l12.728-5.657a.5.5 0 0 1 .556.103z\" />\n                </svg>\n              )}\n            </motion.div>\n          )}\n        </AnimatePresence>\n        {children}\n      </div>\n    </ContextMenuPrimitive.Trigger>\n  );\n}\n\nfunction ContextMenuGroup({\n  ...props\n}: React.ComponentProps<typeof ContextMenuPrimitive.Group>) {\n  return (\n    <ContextMenuPrimitive.Group data-slot=\"context-menu-group\" {...props} />\n  );\n}\n\nfunction ContextMenuPortal({\n  ...props\n}: React.ComponentProps<typeof ContextMenuPrimitive.Portal>) {\n  return (\n    <ContextMenuPrimitive.Portal data-slot=\"context-menu-portal\" {...props} />\n  );\n}\n\nfunction ContextMenuSub({\n  ...props\n}: React.ComponentProps<typeof ContextMenuPrimitive.Sub>) {\n  return <ContextMenuPrimitive.Sub data-slot=\"context-menu-sub\" {...props} />;\n}\n\nfunction ContextMenuRadioGroup({\n  ...props\n}: React.ComponentProps<typeof ContextMenuPrimitive.RadioGroup>) {\n  return (\n    <ContextMenuPrimitive.RadioGroup\n      data-slot=\"context-menu-radio-group\"\n      {...props}\n    />\n  );\n}\n\nfunction ContextMenuSubTrigger({\n  className,\n  inset,\n  children,\n  ...props\n}: React.ComponentProps<typeof ContextMenuPrimitive.SubTrigger> & {\n  inset?: boolean;\n}) {\n  return (\n    <ContextMenuPrimitive.SubTrigger\n      data-slot=\"context-menu-sub-trigger\"\n      data-inset={inset}\n      className={cn(\n        \"focus:bg-accent focus:text-accent-foreground data-[state=open]:bg-accent data-[state=open]:text-accent-foreground flex cursor-default items-center rounded-sm px-2 py-1.5 text-sm outline-hidden select-none data-[inset]:pl-4 [&_svg]:pointer-events-none [&_svg]:shrink-0 [&_svg:not([class*='size-'])]:size-4\",\n        className\n      )}\n      {...props}\n    >\n      {children}\n      <ChevronRightIcon className=\"ml-auto\" />\n    </ContextMenuPrimitive.SubTrigger>\n  );\n}\n\nfunction ContextMenuSubContent({\n  className,\n  children,\n  ...props\n}: React.ComponentProps<typeof ContextMenuPrimitive.SubContent> & {\n  isOpen?: boolean;\n}) {\n  const isOpen = props.isOpen ?? true;\n\n  return (\n    <AnimatePresence>\n      {isOpen && (\n        <ContextMenuSubContentContext.Provider value={{ isOpen }}>\n          <ContextMenuPrimitive.SubContent\n            data-slot=\"context-menu-sub-content\"\n            className={cn(\n              \"bg-popover text-popover-foreground z-50 min-w-[8rem] origin-[var(--radix-dropdown-menu-content-transform-origin)] overflow-hidden rounded-md border p-1 shadow-lg\",\n              className\n            )}\n            {...props}\n          >\n            <motion.div\n              initial={{ opacity: 0, x: -10 }}\n              animate={{ opacity: 1, x: 0 }}\n              exit={{ opacity: 0, x: -10 }}\n              transition={{\n                duration: 0.3,\n                ease: \"easeInOut\",\n                when: \"beforeChildren\",\n              }}\n              className={cn(\n                \"bg-popover text-popover-foreground z-50 min-w-[8rem] origin-[var(--radix-dropdown-menu-content-transform-origin)] overflow-hidden rounded-md border p-1 shadow-lg\",\n                className\n              )}\n            >\n              {React.Children.map(children, (child, index) => (\n                <motion.div\n                  key={index}\n                  initial={{ opacity: 0, x: -10 }}\n                  animate={{ opacity: 1, x: 0 }}\n                  exit={{ opacity: 0, x: -10 }}\n                  transition={{\n                    duration: 0.4,\n                    delay: index * 0.05,\n                    ease: \"easeOut\",\n                  }}\n                >\n                  {child}\n                </motion.div>\n              ))}\n            </motion.div>\n          </ContextMenuPrimitive.SubContent>\n        </ContextMenuSubContentContext.Provider>\n      )}\n    </AnimatePresence>\n  );\n}\n\nfunction ContextMenuContent({\n  className,\n  children,\n  ...props\n}: React.ComponentProps<typeof ContextMenuPrimitive.Content>) {\n  return (\n    <ContextMenuPrimitive.Portal>\n      <ContextMenuPrimitive.Content asChild {...props}>\n        <AnimatePresence>\n          <motion.div\n            initial={{ opacity: 0, scale: 0.95, y: -10 }}\n            animate={{ opacity: 1, scale: 1, y: 0 }}\n            exit={{ opacity: 0, scale: 0.95, y: -10 }}\n            transition={{\n              duration: 0.2,\n              ease: \"easeOut\",\n              when: \"beforeChildren\",\n            }}\n            className={cn(\n              \"bg-popover text-popover-foreground z-50 max-h-[var(--radix-context-menu-content-available-height)] min-w-[8rem] origin-[var(--radix-context-menu-content-transform-origin)] overflow-x-hidden overflow-y-auto rounded-md border p-1 shadow-md\",\n              className\n            )}\n          >\n            {React.Children.map(children, (child, index) => (\n              <motion.div\n                key={index}\n                initial={{ opacity: 0, y: -10 }}\n                animate={{ opacity: 1, y: 0 }}\n                exit={{ opacity: 0, y: -10 }}\n                transition={{\n                  duration: 0.4,\n                  delay: index * 0.05,\n                  ease: \"easeOut\",\n                }}\n              >\n                {child}\n              </motion.div>\n            ))}\n          </motion.div>\n        </AnimatePresence>\n      </ContextMenuPrimitive.Content>\n    </ContextMenuPrimitive.Portal>\n  );\n}\n\nfunction ContextMenuItem({\n  className,\n  inset,\n  variant = \"default\",\n  ...props\n}: React.ComponentProps<typeof ContextMenuPrimitive.Item> & {\n  inset?: boolean;\n  variant?: \"default\" | \"destructive\";\n}) {\n  return (\n    <ContextMenuPrimitive.Item\n      data-slot=\"context-menu-item\"\n      data-inset={inset}\n      data-variant={variant}\n      className={cn(\n        \"focus:bg-accent focus:text-accent-foreground data-[variant=destructive]:text-destructive data-[variant=destructive]:focus:bg-destructive/10 dark:data-[variant=destructive]:focus:bg-destructive/20 data-[variant=destructive]:focus:text-destructive data-[variant=destructive]:*:[svg]:!text-destructive [&_svg:not([class*='text-'])]:text-muted-foreground relative flex cursor-default items-center gap-2 rounded-sm px-2 py-1.5 text-sm outline-hidden select-none data-[disabled]:pointer-events-none data-[disabled]:opacity-50 data-[inset]:pl-4 [&_svg]:pointer-events-none [&_svg]:shrink-0 [&_svg:not([class*='size-'])]:size-4\",\n        className\n      )}\n      {...props}\n    />\n  );\n}\n\nfunction ContextMenuCheckboxItem({\n  className,\n  children,\n  checked,\n  ...props\n}: React.ComponentProps<typeof ContextMenuPrimitive.CheckboxItem>) {\n  return (\n    <ContextMenuPrimitive.CheckboxItem\n      data-slot=\"context-menu-checkbox-item\"\n      className={cn(\n        \"focus:bg-accent focus:text-accent-foreground relative flex cursor-default items-center gap-2 rounded-sm py-1.5 pr-2 pl-4 text-sm outline-hidden select-none data-[disabled]:pointer-events-none data-[disabled]:opacity-50 [&_svg]:pointer-events-none [&_svg]:shrink-0 [&_svg:not([class*='size-'])]:size-4\",\n        className\n      )}\n      checked={checked}\n      {...props}\n    >\n      <Checkbox checked={checked} />\n      {children}\n    </ContextMenuPrimitive.CheckboxItem>\n  );\n}\n\nfunction ContextMenuRadioItem({\n  className,\n  children,\n  ...props\n}: React.ComponentProps<typeof ContextMenuPrimitive.RadioItem>) {\n  return (\n    <ContextMenuPrimitive.RadioItem\n      data-slot=\"context-menu-radio-item\"\n      className={cn(\n        \"focus:bg-accent focus:text-accent-foreground relative flex cursor-default items-center gap-2 rounded-sm py-1.5 pr-2 pl-8 text-sm outline-hidden select-none data-[disabled]:pointer-events-none data-[disabled]:opacity-50 [&_svg]:pointer-events-none [&_svg]:shrink-0 [&_svg:not([class*='size-'])]:size-4\",\n        className\n      )}\n      {...props}\n    >\n      <span className=\"pointer-events-none absolute left-2 flex size-3.5 items-center justify-center\">\n        <ContextMenuPrimitive.ItemIndicator>\n          <CircleIcon className=\"size-2 fill-current\" />\n        </ContextMenuPrimitive.ItemIndicator>\n      </span>\n      {children}\n    </ContextMenuPrimitive.RadioItem>\n  );\n}\n\nfunction ContextMenuLabel({\n  className,\n  inset,\n  ...props\n}: React.ComponentProps<typeof ContextMenuPrimitive.Label> & {\n  inset?: boolean;\n}) {\n  return (\n    <ContextMenuPrimitive.Label\n      data-slot=\"context-menu-label\"\n      data-inset={inset}\n      className={cn(\n        \"text-foreground px-2 py-1.5 text-sm font-medium data-[inset]:pl-8\",\n        className\n      )}\n      {...props}\n    />\n  );\n}\n\nfunction ContextMenuSeparator({\n  className,\n  ...props\n}: React.ComponentProps<typeof ContextMenuPrimitive.Separator>) {\n  return (\n    <ContextMenuPrimitive.Separator\n      data-slot=\"context-menu-separator\"\n      className={cn(\"bg-border -mx-1 my-1 h-px\", className)}\n      {...props}\n    />\n  );\n}\n\nfunction ContextMenuShortcut({\n  className,\n  ...props\n}: React.ComponentProps<\"span\">) {\n  return (\n    <span\n      data-slot=\"context-menu-shortcut\"\n      className={cn(\n        \"text-muted-foreground ml-auto text-xs tracking-widest\",\n        className\n      )}\n      {...props}\n    />\n  );\n}\n\nexport {\n  ContextMenu,\n  ContextMenuTrigger,\n  ContextMenuContent,\n  ContextMenuItem,\n  ContextMenuCheckboxItem,\n  ContextMenuRadioItem,\n  ContextMenuLabel,\n  ContextMenuSeparator,\n  ContextMenuShortcut,\n  ContextMenuGroup,\n  ContextMenuPortal,\n  ContextMenuSub,\n  ContextMenuSubContent,\n  ContextMenuSubTrigger,\n  ContextMenuRadioGroup,\n};\n",
      "type": "registry:component"
    }
  ]
}