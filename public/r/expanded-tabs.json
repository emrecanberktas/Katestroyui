{
  "$schema": "https://ui.shadcn.com/schema/registry-item.json",
  "name": "expanded-tabs",
  "type": "registry:component",
  "title": "Expanded Tabs",
  "description": "UI component for Expanded Tabs.",
  "dependencies": ["@radix-ui/react-tabs", "motion"],
  "files": [
    {
      "path": "components/ui/expanded-tabs.tsx",
      "content": "\"use client\";\r\n\r\nimport * as React from \"react\";\r\nimport * as TabsPrimitive from \"@radix-ui/react-tabs\";\r\nimport { motion, AnimatePresence } from \"motion/react\";\r\nimport type { LucideIcon } from \"lucide-react\";\r\n\r\nimport { cn } from \"@/lib/utils\";\r\n\r\nconst TabsContext = React.createContext<{\r\n  selectedTab: string | null;\r\n  setSelectedTab: (value: string | null) => void;\r\n}>({\r\n  selectedTab: null,\r\n  setSelectedTab: () => {},\r\n});\r\n\r\nconst buttonVariants = {\r\n  initial: {\r\n    gap: 0,\r\n    paddingLeft: \".5rem\",\r\n    paddingRight: \".5rem\",\r\n  },\r\n  animate: (isSelected: boolean) => ({\r\n    gap: isSelected ? \".5rem\" : 0,\r\n    paddingLeft: isSelected ? \"1rem\" : \".5rem\",\r\n    paddingRight: isSelected ? \"1rem\" : \".5rem\",\r\n  }),\r\n};\r\n\r\ninterface TabsTriggerProps\r\n  extends React.ComponentProps<typeof TabsPrimitive.Trigger> {\r\n  \"data-state\"?: \"active\" | \"inactive\";\r\n  value: string;\r\n  icon?: LucideIcon;\r\n}\r\n\r\nfunction ExpandedTabs({\r\n  className,\r\n  defaultValue,\r\n  onValueChange,\r\n  ...props\r\n}: React.ComponentProps<typeof TabsPrimitive.Root>) {\r\n  const [selectedTab, setSelectedTab] = React.useState<string | null>(\r\n    defaultValue || null\r\n  );\r\n\r\n  const handleValueChange = (value: string) => {\r\n    setSelectedTab(value);\r\n    onValueChange?.(value);\r\n  };\r\n\r\n  return (\r\n    <TabsContext.Provider value={{ selectedTab, setSelectedTab }}>\r\n      <TabsPrimitive.Root\r\n        data-slot=\"tabs\"\r\n        className={cn(\"flex flex-col gap-2\", className)}\r\n        defaultValue={defaultValue}\r\n        onValueChange={handleValueChange}\r\n        {...props}\r\n      >\r\n        {props.children}\r\n      </TabsPrimitive.Root>\r\n    </TabsContext.Provider>\r\n  );\r\n}\r\n\r\nfunction ExpandedTabsList({\r\n  className,\r\n  ...props\r\n}: React.ComponentProps<typeof TabsPrimitive.List>) {\r\n  const tabsListRef = React.useRef<HTMLDivElement>(null);\r\n\r\n  return (\r\n    <TabsPrimitive.List\r\n      ref={tabsListRef}\r\n      data-slot=\"tabs-list\"\r\n      {...props}\r\n      className={cn(\r\n        \"bg-muted text-muted-foreground inline-flex h-9 w-fit items-center justify-center rounded-lg p-[3px]\",\r\n        className\r\n      )}\r\n    />\r\n  );\r\n}\r\n\r\nfunction ExpandedTabsTrigger({\r\n  className,\r\n  value,\r\n  icon: Icon,\r\n  ...props\r\n}: TabsTriggerProps) {\r\n  const { selectedTab, setSelectedTab } = React.useContext(TabsContext);\r\n  const [isHovered, setIsHovered] = React.useState(false);\r\n  const triggerRef = React.useRef<HTMLButtonElement>(null);\r\n  const isActive = props[\"data-state\"] === \"active\";\r\n  const isSelected = isActive || selectedTab === value;\r\n\r\n  const handleClick = () => {\r\n    setSelectedTab(value);\r\n  };\r\n\r\n  return (\r\n    <TabsPrimitive.Trigger\r\n      ref={triggerRef}\r\n      data-slot=\"tabs-trigger\"\r\n      value={value}\r\n      {...props}\r\n      onClick={handleClick}\r\n      className=\"relative z-10 flex items-center gap-1.5\"\r\n    >\r\n      <div\r\n        className=\"relative inline-flex\"\r\n        onMouseEnter={() => setIsHovered(true)}\r\n        onMouseLeave={() => setIsHovered(false)}\r\n      >\r\n        <motion.div\r\n          variants={buttonVariants}\r\n          initial={{ gap: 0, paddingLeft: \".5rem\", paddingRight: \".5rem\" }}\r\n          animate={{\r\n            gap: isSelected ? \".5rem\" : 0,\r\n            paddingLeft: isSelected ? \"1rem\" : \".5rem\",\r\n            paddingRight: isSelected ? \"1rem\" : \".5rem\",\r\n          }}\r\n          transition={{ delay: 0.1, type: \"spring\", bounce: 0, duration: 0.6 }}\r\n          className={cn(\r\n            \"relative inline-flex items-center rounded-md px-3 py-1 text-sm font-medium transition-[color,box-shadow] focus-visible:ring-[3px] focus-visible:outline-1 focus-visible:border-ring focus-visible:ring-ring/50 focus-visible:outline-ring disabled:pointer-events-none disabled:opacity-50\",\r\n            isActive\r\n              ? cn(\"bg-background dark:bg-input/50\")\r\n              : \"text-muted-foreground hover:bg-muted hover:text-foreground\",\r\n            className\r\n          )}\r\n        >\r\n          {Icon && <Icon size={20} />}\r\n          <AnimatePresence initial={false}>\r\n            {isSelected && (\r\n              <motion.span\r\n                variants={{\r\n                  initial: { width: 0, opacity: 0 },\r\n                  animate: { width: \"auto\", opacity: 1 },\r\n                  exit: { width: 0, opacity: 0 },\r\n                }}\r\n                initial=\"initial\"\r\n                animate=\"animate\"\r\n                exit=\"exit\"\r\n                transition={{\r\n                  delay: 0.1,\r\n                  type: \"spring\",\r\n                  bounce: 0,\r\n                  duration: 0.6,\r\n                }}\r\n                className=\"overflow-hidden\"\r\n              >\r\n                {props.children}\r\n              </motion.span>\r\n            )}\r\n          </AnimatePresence>\r\n          {(isHovered || isActive) && (\r\n            <motion.div\r\n              layoutId=\"tab-indicator\"\r\n              className={cn(\r\n                \"absolute inset-0 rounded-md\",\r\n                isActive\r\n                  ? \"bg-black/10 dark:bg-white/20\"\r\n                  : \"bg-black/5 dark:bg-white/10\"\r\n              )}\r\n              initial={{ opacity: 0 }}\r\n              animate={{ opacity: 1 }}\r\n              transition={{ type: \"spring\", bounce: 0, duration: 0.4 }}\r\n            />\r\n          )}\r\n        </motion.div>\r\n      </div>\r\n    </TabsPrimitive.Trigger>\r\n  );\r\n}\r\n\r\nfunction ExpandedTabsContent({\r\n  className,\r\n  ...props\r\n}: React.ComponentProps<typeof TabsPrimitive.Content>) {\r\n  return (\r\n    <TabsPrimitive.Content\r\n      data-slot=\"tabs-content\"\r\n      className={cn(\"flex-1 outline-none\", className)}\r\n      {...props}\r\n    >\r\n      <motion.div\r\n        initial={{ opacity: 0, y: -10 }}\r\n        animate={{ opacity: 1, y: 0 }}\r\n        transition={{ duration: 0.5 }}\r\n      >\r\n        {props.children}\r\n      </motion.div>\r\n    </TabsPrimitive.Content>\r\n  );\r\n}\r\n\r\nexport {\r\n  ExpandedTabs,\r\n  ExpandedTabsList,\r\n  ExpandedTabsTrigger,\r\n  ExpandedTabsContent,\r\n};\r\n",
      "type": "registry:component"
    }
  ]
}
